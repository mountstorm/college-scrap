import React from 'react';
import { useNavigate } from 'react-router-dom';

function GeneratedSchedule({ scheduleData }) {
  const navigate = useNavigate();

  const { semester, total_credits, courses, warnings, alternatives } = scheduleData;

  const handleDownload = () => {
    // Create text content
    const content = `
MY RECOMMENDED SCHEDULE - ${semester}
Total Credits: ${total_credits}

COURSES:
${courses
  .map(
    (c) => `
${c.code} - ${c.name} (${c.credits} hrs)
Category: ${c.category}
Workload: ${c.workload}
Prerequisites: Met ‚úì
`
  )
  .join('\n')}

${warnings.length > 0 ? `WARNINGS:\n${warnings.map((w) => `- ${w.message}`).join('\n')}` : ''}

Generated by CollegeScrap
    `.trim();

    // Create download link
    const blob = new Blob([content], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `schedule-${semester.replace(' ', '-')}.txt`;
    link.click();
    window.URL.revokeObjectURL(url);
  };

  return (
    <div className="card">
      <div className="header">
        <h1>YOUR RECOMMENDED SCHEDULE - {semester}</h1>
        <p>
          Total: {total_credits} Credits |{' '}
          {warnings.length === 0 ? 'Balanced Workload ‚úì' : 'Review Warnings Below'}
        </p>
      </div>

      <div className="info-section">
        <h2>Courses</h2>
        <ul className="course-list">
          {courses.map((course) => (
            <li key={course.code} className="course-item">
              <div>
                <span className="course-code">{course.code}</span>
                <span className="course-name">
                  {course.name} ({course.credits} hrs)
                </span>
                <span className="course-credits">{course.credits} hrs</span>
              </div>
              <div style={{ marginTop: '8px', fontSize: '0.9rem', color: '#666' }}>
                <div>Prerequisites: Met ‚úì</div>
                <div>Category: {course.category}</div>
                <div>
                  Typical Workload:{' '}
                  <span className={`workload-badge workload-${course.workload.toLowerCase()}`}>
                    {course.workload}
                  </span>
                </div>
              </div>
            </li>
          ))}
        </ul>

        {warnings.length > 0 && (
          <>
            <h3>‚ö†Ô∏è Warnings</h3>
            {warnings.map((warning, index) => (
              <div
                key={index}
                className={`warning-box ${warning.level === 'warning' ? 'error' : ''}`}
              >
                {warning.message}
              </div>
            ))}
          </>
        )}

        {alternatives && alternatives.length > 0 && (
          <>
            <h3>Alternative Courses Available</h3>
            <ul className="course-list">
              {alternatives.map((course) => (
                <li key={course.code} className="course-item">
                  <span className="course-code">{course.code}</span>
                  <span className="course-name">
                    {course.name} ({course.credits} hrs)
                  </span>
                  <span className={`workload-badge workload-${course.workload.toLowerCase()}`}>
                    {course.workload}
                  </span>
                </li>
              ))}
            </ul>
          </>
        )}
      </div>

      <div className="button-group">
        <button className="btn btn-secondary" onClick={() => navigate('/schedule-builder')}>
          ‚Üê Try Different Semester
        </button>
        <button className="btn" onClick={handleDownload}>
          üìÑ Download for Advisor Meeting
        </button>
      </div>
    </div>
  );
}

export default GeneratedSchedule;
